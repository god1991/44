<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<!-- The XHTML header is needed here. Otherwise the panning of our images doesn't work -->
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <title>Map Content</title>
   <link href="Res/styles/shared.css" rel="stylesheet" type="text/css" />
</head>
<body class="overviewMapBody">
<!--START PAGE TOOLS UTILITIES MAP CONTENT IMAGEMAP-->

<div class="overviewDiv">

<table height="100%" align="center" halign="center">
<tr>
<td>

<!-- DETAILED IMAGE MAP -->
  <img id="mapDetailed" 
       src="mapContentImagemap_Details.jpg" 
       usemap="#Details_Imagemap" 
       style="display:show">

<map name="Details_Imagemap">
<area shape="rect" coords="98, 488, 160, 503" href="index.html#主题2" target="_parent" alt="NoSql入门和概述">
<area shape="rect" coords="161, 121, 206, 134" href="index.html#主题3" target="_parent" alt="入门概述">
<area shape="rect" coords="208, 19, 315, 47" href="index.html#主题62" target="_parent" alt="1 互联网时代背景下 大机遇，为什么用nosql">
<area shape="rect" coords="316, 2, 447, 14" href="index.html#主题63" target="_parent" alt="1单机Sql的服务器的美好年代">
<area shape="rect" coords="316, 15, 421, 26" href="index.html#主题64" target="_parent" alt="2 Memcached+MySQL">
<area shape="rect" coords="316, 27, 415, 39" href="index.html#主题65" target="_parent" alt="3 Mysql主从读写分离">
<area shape="rect" coords="316, 40, 376, 51" href="index.html#主题66" target="_parent" alt="4 分表分库 ">
<area shape="rect" coords="316, 52, 420, 64" href="index.html#主题67" target="_parent" alt="5 MySQL的扩展性瓶颈">
<area shape="rect" coords="316, 64, 413, 76" href="index.html#主题68" target="_parent" alt="6  今天是什么样子？？">
<area shape="rect" coords="208, 77, 256, 91" href="index.html#主题69" target="_parent" alt="2 是什么">
<area shape="rect" coords="208, 102, 252, 118" href="index.html#主题70" target="_parent" alt="3 能干嘛">
<area shape="rect" coords="254, 92, 293, 103" href="index.html#主题71" target="_parent" alt="易扩展">
<area shape="rect" coords="254, 104, 330, 116" href="index.html#主题72" target="_parent" alt="大数据量高性能">
<area shape="rect" coords="254, 117, 348, 128" href="index.html#主题73" target="_parent" alt="多样灵活的数据模型">
<area shape="rect" coords="208, 146, 252, 162" href="index.html#主题74" target="_parent" alt="4 去哪下">
<area shape="rect" coords="254, 131, 281, 145" href="index.html#主题75" target="_parent" alt="Redis">
<area shape="rect" coords="254, 146, 306, 160" href="index.html#主题76" target="_parent" alt="Memcache">
<area shape="rect" coords="254, 161, 296, 174" href="index.html#主题77" target="_parent" alt="Mongdb">
<area shape="rect" coords="208, 194, 252, 210" href="index.html#主题78" target="_parent" alt="5 怎么玩">
<area shape="rect" coords="254, 177, 268, 189" href="index.html#主题79" target="_parent" alt="KV">
<area shape="rect" coords="254, 190, 282, 201" href="index.html#主题80" target="_parent" alt="Cache">
<area shape="rect" coords="254, 202, 304, 214" href="index.html#主题81" target="_parent" alt="Persistence">
<area shape="rect" coords="254, 215, 275, 226" href="index.html#主题82" target="_parent" alt="......">
<area shape="rect" coords="161, 275, 203, 288" href="index.html#主题4" target="_parent" alt="3V+3高">
<area shape="rect" coords="205, 244, 281, 260" href="index.html#主题83" target="_parent" alt="大数据时代的3V">
<area shape="rect" coords="282, 229, 339, 243" href="index.html#主题84" target="_parent" alt="海量Volume">
<area shape="rect" coords="282, 244, 336, 258" href="index.html#主题85" target="_parent" alt="多样Variety">
<area shape="rect" coords="282, 259, 340, 272" href="index.html#主题86" target="_parent" alt="实时Velocity">
<area shape="rect" coords="205, 290, 284, 306" href="index.html#主题87" target="_parent" alt="互联网需求的3高">
<area shape="rect" coords="286, 275, 317, 289" href="index.html#主题88" target="_parent" alt="高并发">
<area shape="rect" coords="286, 290, 317, 304" href="index.html#主题89" target="_parent" alt="高可扩">
<area shape="rect" coords="286, 305, 317, 319" href="index.html#主题90" target="_parent" alt="高性能">
<area shape="rect" coords="161, 470, 266, 483" href="index.html#主题5" target="_parent" alt="当下的NoSQL经典应用">
<area shape="rect" coords="268, 322, 411, 335" href="index.html#主题91" target="_parent" alt="当下的应用是sql和nosql一起使用">
<area shape="rect" coords="268, 476, 415, 492" href="index.html#主题92" target="_parent" alt="阿里巴巴中文站商品信息如何存放">
<area shape="rect" coords="417, 336, 546, 362" href="index.html#主题93" target="_parent" alt="看看阿里巴巴中文网站首页 以女装/女包包为例">
<area shape="rect" coords="417, 372, 489, 388" href="index.html#主题94" target="_parent" alt="1 商品基本信息">
<area shape="rect" coords="491, 363, 595, 375" href="index.html#主题95" target="_parent" alt="名称、价格，出厂日期等">
<area shape="rect" coords="491, 376, 862, 397" href="index.html#主题96" target="_parent" alt="关系型数据库：mysql/oracle 目前淘宝在去O化(也即拿掉Oracle)，注意，淘宝内部用的Mysql是里面的大牛自己改造过的">
<area shape="rect" coords="417, 404, 588, 420" href="index.html#主题97" target="_parent" alt="2 商品描述、详情、评价信息(多文字类)">
<area shape="rect" coords="590, 400, 740, 411" href="index.html#主题98" target="_parent" alt="多文字信息描述类，IO读写性能变差">
<area shape="rect" coords="590, 412, 682, 424" href="index.html#主题99" target="_parent" alt="文档数据库MongDB中">
<area shape="rect" coords="417, 443, 480, 459" href="index.html#主题100" target="_parent" alt="3 商品的图片">
<area shape="rect" coords="482, 427, 549, 438" href="index.html#主题101" target="_parent" alt="商品图片展现类">
<area shape="rect" coords="482, 452, 572, 465" href="index.html#主题102" target="_parent" alt="分布式的文件系统中">
<area shape="rect" coords="573, 439, 638, 451" href="index.html#主题103" target="_parent" alt="淘宝自己的TFS">
<area shape="rect" coords="573, 452, 631, 463" href="index.html#主题104" target="_parent" alt="Google的GFS">
<area shape="rect" coords="573, 464, 640, 476" href="index.html#主题105" target="_parent" alt="Hadoop的HDFS">
<area shape="rect" coords="417, 483, 489, 499" href="index.html#主题106" target="_parent" alt="4 商品的关键字">
<area shape="rect" coords="491, 479, 577, 490" href="index.html#主题107" target="_parent" alt="搜索引擎，淘宝内用">
<area shape="rect" coords="491, 491, 527, 503" href="index.html#主题108" target="_parent" alt="ISearch">
<area shape="rect" coords="417, 510, 554, 526" href="index.html#主题109" target="_parent" alt="5 商品的波段性的热点高频信息">
<area shape="rect" coords="556, 506, 605, 517" href="index.html#主题110" target="_parent" alt="内存数据库">
<area shape="rect" coords="556, 518, 659, 530" href="index.html#主题111" target="_parent" alt="Tair、Redis、Memcache">
<area shape="rect" coords="417, 537, 573, 552" href="index.html#主题112" target="_parent" alt="6 商品的交易、价格计算、积分累计">
<area shape="rect" coords="575, 533, 702, 544" href="index.html#主题113" target="_parent" alt="外部系统，外部第3方支付接口">
<area shape="rect" coords="575, 545, 606, 557" href="index.html#主题114" target="_parent" alt="支付宝">
<area shape="rect" coords="417, 560, 572, 599" href="index.html#主题115" target="_parent" alt="给学生总结 大型互联网应用(大数据、高并发、 多样数据类型)的难点和解决方案">
<area shape="rect" coords="574, 576, 600, 589" href="index.html#主题116" target="_parent" alt="难点">
<area shape="rect" coords="602, 563, 669, 574" href="index.html#主题117" target="_parent" alt="数据类型多样性">
<area shape="rect" coords="602, 575, 706, 587" href="index.html#主题118" target="_parent" alt="数据源多样性和变化重构">
<area shape="rect" coords="602, 588, 787, 599" href="index.html#主题119" target="_parent" alt="数据源改造而数据服务平台不需要大面积重构">
<area shape="rect" coords="574, 605, 619, 618" href="index.html#主题120" target="_parent" alt="解决办法">
<area shape="rect" coords="620, 602, 754, 614" href="index.html#主题121" target="_parent" alt="给学生画图介绍EAI和统一数据平台">
<area shape="rect" coords="161, 711, 257, 724" href="index.html#主题6" target="_parent" alt="NoSQL数据模型简介">
<area shape="rect" coords="259, 641, 392, 681" href="index.html#主题122" target="_parent" alt="以一个电商客户、订单、订购 、地址模型来对比下关系型 数据库和非关系型数据库">
<area shape="rect" coords="394, 623, 539, 637" href="index.html#主题123" target="_parent" alt="传统的关系型数据库你如何设计？">
<area shape="rect" coords="540, 621, 782, 632" href="index.html#主题124" target="_parent" alt="给学生画出ER图(1:1/1:N/N:N,主外键等常见)，让他们明白">
<area shape="rect" coords="394, 646, 470, 659" href="index.html#主题125" target="_parent" alt="Nosql你如何设计">
<area shape="rect" coords="472, 640, 616, 651" href="index.html#主题126" target="_parent" alt="给学生用BSon画出构建的数据模型">
<area shape="rect" coords="472, 652, 536, 664" href="index.html#主题127" target="_parent" alt="什么是BSON">
<area shape="rect" coords="394, 690, 493, 703" href="index.html#主题128" target="_parent" alt="两者对比，问题和难点">
<area shape="rect" coords="495, 683, 666, 696" href="index.html#主题129" target="_parent" alt="为什么上述的情况可以用聚合模型来处理">
<area shape="rect" coords="668, 667, 841, 688" href="index.html#主题130" target="_parent" alt="高并发的操作是不太建议有关联查询的， 互联网公司用冗余数据来避免关联查询">
<area shape="rect" coords="668, 689, 817, 700" href="index.html#主题131" target="_parent" alt="分布式事务是支持不了太多的并发的">
<area shape="rect" coords="495, 701, 711, 723" href="index.html#主题132" target="_parent" alt="启发学生，想想关系模型数据库你如何查？ 如果按照我们新设计的BSon，是不是查询起来很可爱">
<area shape="rect" coords="259, 742, 304, 758" href="index.html#主题133" target="_parent" alt="聚合模型">
<area shape="rect" coords="306, 725, 339, 737" href="index.html#主题134" target="_parent" alt="KV键值">
<area shape="rect" coords="306, 738, 330, 749" href="index.html#主题135" target="_parent" alt="Bson">
<area shape="rect" coords="306, 750, 336, 762" href="index.html#主题136" target="_parent" alt="列族">
<area shape="rect" coords="306, 763, 336, 774" href="index.html#主题137" target="_parent" alt="图形">
<area shape="rect" coords="161, 842, 284, 855" href="index.html#主题7" target="_parent" alt="NoSQL数据库的四大分类">
<area shape="rect" coords="286, 790, 369, 804" href="index.html#主题138" target="_parent" alt="KV键值：典型介绍">
<area shape="rect" coords="371, 777, 477, 789" href="index.html#主题139" target="_parent" alt="新浪：BerkeleyDB+redis">
<area shape="rect" coords="371, 790, 442, 801" href="index.html#主题140" target="_parent" alt="美团：redis+tair">
<area shape="rect" coords="371, 802, 501, 814" href="index.html#主题141" target="_parent" alt="阿里、百度：memcache+redis">
<area shape="rect" coords="286, 823, 467, 837" href="index.html#主题142" target="_parent" alt="文档型数据库(bson格式比较多)：典型介绍">
<area shape="rect" coords="468, 817, 510, 828" href="index.html#主题143" target="_parent" alt="CouchDB">
<area shape="rect" coords="468, 829, 512, 841" href="index.html#主题144" target="_parent" alt="MongoDB">
<area shape="rect" coords="286, 850, 349, 864" href="index.html#主题145" target="_parent" alt="列存储数据库">
<area shape="rect" coords="350, 844, 429, 855" href="index.html#主题146" target="_parent" alt="Cassandra, HBase">
<area shape="rect" coords="350, 856, 418, 868" href="index.html#主题147" target="_parent" alt="分布式文件系统">
<area shape="rect" coords="286, 883, 349, 897" href="index.html#主题148" target="_parent" alt="图关系数据库">
<area shape="rect" coords="350, 871, 598, 882" href="index.html#主题149" target="_parent" alt="它不是放图形的，放的是关系比如:朋友圈社交网络、广告推荐系统">
<area shape="rect" coords="350, 883, 536, 895" href="index.html#主题150" target="_parent" alt="社交网络，推荐系统等。专注于构建关系图谱">
<area shape="rect" coords="350, 896, 419, 907" href="index.html#主题151" target="_parent" alt="Neo4J, InfoGrid">
<area shape="rect" coords="161, 949, 332, 962" href="index.html#主题8" target="_parent" alt="在分布式数据库中CAP原理CAP+BASE">
<area shape="rect" coords="334, 923, 358, 936" href="index.html#主题152" target="_parent" alt="CAP">
<area shape="rect" coords="360, 910, 477, 922" href="index.html#主题153" target="_parent" alt="C:Consistency（强一致性）">
<area shape="rect" coords="360, 923, 463, 934" href="index.html#主题154" target="_parent" alt="A:Availability（可用性）">
<area shape="rect" coords="360, 935, 512, 947" href="index.html#主题155" target="_parent" alt="P:Partition tolerance（分区容错性）">
<area shape="rect" coords="334, 948, 391, 959" href="index.html#主题156" target="_parent" alt="CAP的3进2">
<area shape="rect" coords="334, 960, 390, 972" href="index.html#主题157" target="_parent" alt="经典CAP图">
<area shape="rect" coords="334, 975, 364, 988" href="index.html#主题158" target="_parent" alt="BASE">
<area shape="rect" coords="366, 973, 405, 984" href="index.html#主题159" target="_parent" alt="是什么">
<area shape="rect" coords="98, 1386, 153, 1401" href="index.html#主题9" target="_parent" alt="Redis入门介绍">
<area shape="rect" coords="155, 1120, 213, 1133" href="index.html#主题10" target="_parent" alt="入门概述">
<area shape="rect" coords="214, 1037, 255, 1050" href="index.html#主题160" target="_parent" alt="1是什么">
<area shape="rect" coords="256, 997, 475, 1009" href="index.html#主题161" target="_parent" alt="Redis:REmote DIctionary Server(远程字典服务器)">
<area shape="rect" coords="256, 1010, 530, 1050" href="index.html#主题162" target="_parent" alt="是完全开源免费的，用C语言编写的，遵守BSD协议， 是一个高性能的(key/value)分布式内存数据库，基于内存运行 并支持持久化的NoSQL数据库，是当前最热门的NoSql数据库之一, 也被人们称为数据结构服务器">
<area shape="rect" coords="256, 1064, 468, 1077" href="index.html#主题163" target="_parent" alt="Redis 与其他 key - value 缓存产品有以下三个特点">
<area shape="rect" coords="470, 1051, 860, 1063" href="index.html#主题164" target="_parent" alt="Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用">
<area shape="rect" coords="470, 1064, 870, 1075" href="index.html#主题165" target="_parent" alt="Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储">
<area shape="rect" coords="470, 1076, 695, 1088" href="index.html#主题166" target="_parent" alt="Redis支持数据的备份，即master-slave模式的数据备份">
<area shape="rect" coords="214, 1116, 258, 1129" href="index.html#主题167" target="_parent" alt="2 能干嘛">
<area shape="rect" coords="259, 1091, 601, 1102" href="index.html#主题168" target="_parent" alt="内存存储和持久化：redis支持异步将内存中的数据写到硬盘上，同时不影响继续服务">
<area shape="rect" coords="259, 1103, 540, 1115" href="index.html#主题169" target="_parent" alt="取最新N个数据的操作，如：可以将最新的10条评论的ID放在List集合">
<area shape="rect" coords="259, 1116, 476, 1127" href="index.html#主题170" target="_parent" alt="模拟类似于HttpSession这种需要设定过期时间的功能">
<area shape="rect" coords="259, 1128, 345, 1140" href="index.html#主题171" target="_parent" alt="发布、订阅消息系统">
<area shape="rect" coords="259, 1141, 327, 1152" href="index.html#主题172" target="_parent" alt="定时器、计数器">
<area shape="rect" coords="214, 1162, 258, 1175" href="index.html#主题173" target="_parent" alt="3 去哪下">
<area shape="rect" coords="259, 1155, 335, 1167" href="index.html#主题174" target="_parent" alt="Http://redis.io/">
<area shape="rect" coords="259, 1168, 361, 1179" href="index.html#主题175" target="_parent" alt="Http://www.redis.cn/">
<area shape="rect" coords="214, 1207, 258, 1221" href="index.html#主题176" target="_parent" alt="4 怎么玩">
<area shape="rect" coords="259, 1182, 372, 1194" href="index.html#主题177" target="_parent" alt="数据类型、基本操作和配置">
<area shape="rect" coords="259, 1195, 365, 1206" href="index.html#主题178" target="_parent" alt="持久化和复制，RDB/AOF">
<area shape="rect" coords="259, 1207, 309, 1219" href="index.html#主题179" target="_parent" alt="事务的控制">
<area shape="rect" coords="259, 1220, 281, 1231" href="index.html#主题180" target="_parent" alt="复制">
<area shape="rect" coords="259, 1232, 281, 1244" href="index.html#主题181" target="_parent" alt="......">
<area shape="rect" coords="155, 1282, 339, 1295" href="index.html#主题11" target="_parent" alt="VMWare+VMTools千里之行始于足下">
<area shape="rect" coords="341, 1247, 433, 1258" href="index.html#主题182" target="_parent" alt="VMWare虚拟机的安装">
<area shape="rect" coords="341, 1265, 463, 1279" href="index.html#主题183" target="_parent" alt="CentOS或者RedHad5的安装">
<area shape="rect" coords="465, 1259, 627, 1270" href="index.html#主题184" target="_parent" alt="如何查看自己的linux是32位还是64位">
<area shape="rect" coords="465, 1271, 605, 1283" href="index.html#主题185" target="_parent" alt="假如出现了不支持虚拟化的问题">
<area shape="rect" coords="341, 1284, 405, 1295" href="index.html#主题186" target="_parent" alt="VMTools的安装">
<area shape="rect" coords="341, 1296, 399, 1308" href="index.html#主题187" target="_parent" alt="设置共享目录">
<area shape="rect" coords="341, 1309, 543, 1320" href="index.html#主题188" target="_parent" alt="上述环境都OK后开始进行Redis的服务器安装配置">
<area shape="rect" coords="155, 1497, 229, 1510" href="index.html#主题12" target="_parent" alt="Redis的安装">
<area shape="rect" coords="231, 1323, 307, 1335" href="index.html#主题189" target="_parent" alt="Windows版安装">
<area shape="rect" coords="231, 1358, 293, 1371" href="index.html#主题190" target="_parent" alt="重要提示：">
<area shape="rect" coords="295, 1336, 580, 1367" href="index.html#主题191" target="_parent" alt="由于企业里面做Redis开发，99%都是Linux版的运用和安装， 几乎不会涉及到Windows版，上一步的讲解只是为了知识的完整性， Windows版不作为重点，同学可以下去自己玩，企业实战就认一个版：Linux">
<area shape="rect" coords="231, 1518, 288, 1532" href="index.html#主题192" target="_parent" alt="Linux版安装">
<area shape="rect" coords="290, 1374, 594, 1386" href="index.html#主题193" target="_parent" alt="去英文版官网下载后，本次讲解我们使用截止到2015.10.8号的稳定版3.0.4">
<area shape="rect" coords="290, 1386, 519, 1398" href="index.html#主题194" target="_parent" alt="下载获得redis-3.0.4.tar.gz后将它放入我们的共享目录">
<area shape="rect" coords="290, 1399, 612, 1410" href="index.html#主题195" target="_parent" alt="从共享目录拷贝到/usr/zzyy_soft目录下，解压命令:tar -xzvf redis-3.0.4.tar.gz">
<area shape="rect" coords="290, 1411, 448, 1423" href="index.html#主题196" target="_parent" alt="解压完成后出现文件夹：redis-3.0.4">
<area shape="rect" coords="290, 1424, 401, 1435" href="index.html#主题197" target="_parent" alt="进入目录:cd redis-3.0.4">
<area shape="rect" coords="290, 1471, 439, 1485" href="index.html#主题198" target="_parent" alt="在redis-3.0.4目录下执行make命令">
<area shape="rect" coords="441, 1455, 531, 1478" href="index.html#主题199" target="_parent" alt="运行make命令时故 意出现的错误解析：">
<area shape="rect" coords="533, 1443, 581, 1456" href="index.html#主题200" target="_parent" alt="安装gcc">
<area shape="rect" coords="583, 1436, 707, 1448" href="index.html#主题201" target="_parent" alt="能上网：yum install gcc-c++">
<area shape="rect" coords="583, 1449, 623, 1460" href="index.html#主题202" target="_parent" alt="不上网：">
<area shape="rect" coords="533, 1461, 577, 1473" href="index.html#主题203" target="_parent" alt="二次make">
<area shape="rect" coords="533, 1476, 713, 1489" href="index.html#主题204" target="_parent" alt="Jemalloc/jemalloc.h：没有那个文件或目录">
<area shape="rect" coords="715, 1474, 858, 1485" href="index.html#主题205" target="_parent" alt="运行make distclean之后再make">
<area shape="rect" coords="533, 1490, 649, 1502" href="index.html#主题206" target="_parent" alt="Redis Test(可以不用执行)">
<area shape="rect" coords="290, 1507, 457, 1518" href="index.html#主题207" target="_parent" alt="如果make完成后继续执行make install">
<area shape="rect" coords="290, 1547, 440, 1560" href="index.html#主题208" target="_parent" alt="查看默认安装目录：usr/local/bin">
<area shape="rect" coords="442, 1519, 727, 1530" href="index.html#主题209" target="_parent" alt="Redis-benchmark:性能测试工具，可以在自己本子运行，看看自己本子性能如何">
<area shape="rect" coords="442, 1531, 653, 1541" href="index.html#主题210" target="_parent" alt="Redis-check-aof：修复有问题的AOF文件，rdb和aof后面讲">
<area shape="rect" coords="442, 1542, 620, 1552" href="index.html#主题211" target="_parent" alt="Redis-check-dump：修复有问题的dump.rdb文件">
<area shape="rect" coords="442, 1553, 548, 1564" href="index.html#主题212" target="_parent" alt="Redis-cli：客户端，操作入口">
<area shape="rect" coords="442, 1565, 554, 1575" href="index.html#主题213" target="_parent" alt="Redis-sentinel：redis集群使用">
<area shape="rect" coords="442, 1576, 574, 1586" href="index.html#主题214" target="_parent" alt="Redis-server：Redis服务器启动命令">
<area shape="rect" coords="290, 1608, 325, 1622" href="index.html#主题215" target="_parent" alt="启动">
<area shape="rect" coords="327, 1589, 621, 1601" href="index.html#主题216" target="_parent" alt="修改redis.conf文件将里面的daemonize no 改成 yes，让服务在后台启动">
<area shape="rect" coords="327, 1602, 357, 1613" href="index.html#主题217" target="_parent" alt="启动">
<area shape="rect" coords="327, 1614, 375, 1626" href="index.html#主题218" target="_parent" alt="连通测试">
<area shape="rect" coords="327, 1627, 721, 1638" href="index.html#主题219" target="_parent" alt="/usr/local/bin目录下运行redis-server，运行拷贝出存放了自定义conf文件目录下的redis.conf文件">
<area shape="rect" coords="290, 1639, 372, 1651" href="index.html#主题220" target="_parent" alt="永远的helloworld">
<area shape="rect" coords="290, 1657, 325, 1670" href="index.html#主题221" target="_parent" alt="关闭">
<area shape="rect" coords="327, 1652, 444, 1662" href="index.html#主题222" target="_parent" alt="单实例关闭：redis-cli shutdown">
<area shape="rect" coords="327, 1663, 526, 1674" href="index.html#主题223" target="_parent" alt="多实例关闭，指定端口关闭:redis-cli -p 6379 shutdown">
<area shape="rect" coords="155, 1733, 303, 1746" href="index.html#主题13" target="_parent" alt="Redis启动后杂项基础知识讲解">
<area shape="rect" coords="305, 1687, 337, 1700" href="index.html#主题224" target="_parent" alt="单进程">
<area shape="rect" coords="338, 1677, 641, 1696" href="index.html#主题225" target="_parent" alt="单进程模型来处理客户端的请求。对读写等事件的响应 是通过对epoll函数的包装来做到的。Redis的实际处理速度完全依靠主进程的执行效率">
<area shape="rect" coords="305, 1701, 541, 1711" href="index.html#主题226" target="_parent" alt="默认16个数据库，类似数组下表从零开始，初始默认使用零号库">
<area shape="rect" coords="305, 1712, 386, 1722" href="index.html#主题227" target="_parent" alt="Select命令切换数据库">
<area shape="rect" coords="305, 1723, 433, 1734" href="index.html#主题228" target="_parent" alt="Dbsize查看当前数据库的key的数量">
<area shape="rect" coords="305, 1735, 384, 1745" href="index.html#主题229" target="_parent" alt="Flushdb：清空当前库">
<area shape="rect" coords="305, 1746, 383, 1756" href="index.html#主题230" target="_parent" alt="Flushall；通杀全部库">
<area shape="rect" coords="305, 1757, 551, 1768" href="index.html#主题231" target="_parent" alt="统一密码管理，16个库都是同样密码，要么都OK要么一个也连接不上">
<area shape="rect" coords="305, 1769, 391, 1779" href="index.html#主题232" target="_parent" alt="Redis索引都是从零开始">
<area shape="rect" coords="305, 1780, 359, 1790" href="index.html#主题233" target="_parent" alt="为什么是6379">
<area shape="rect" coords="98, 2179, 157, 2193" href="index.html#主题14" target="_parent" alt="Redis数据类型">
<area shape="rect" coords="159, 1825, 265, 1839" href="index.html#主题15" target="_parent" alt="Redis的五大数据类型">
<area shape="rect" coords="267, 1799, 341, 1810" href="index.html#主题234" target="_parent" alt="String（字符串）">
<area shape="rect" coords="267, 1811, 399, 1821" href="index.html#主题235" target="_parent" alt="Hash（哈希，类似java里的Map）">
<area shape="rect" coords="267, 1822, 324, 1833" href="index.html#主题236" target="_parent" alt="List（列表）">
<area shape="rect" coords="267, 1833, 323, 1844" href="index.html#主题237" target="_parent" alt="Set（集合）">
<area shape="rect" coords="267, 1845, 378, 1855" href="index.html#主题238" target="_parent" alt="Zset(sorted set：有序集合)">
<area shape="rect" coords="159, 1864, 328, 1877" href="index.html#主题16" target="_parent" alt="哪里去获得redis常见数据类型操作命令">
<area shape="rect" coords="330, 1858, 419, 1869" href="index.html#主题239" target="_parent" alt="Http://redisdoc.com/">
<area shape="rect" coords="159, 1917, 227, 1930" href="index.html#主题17" target="_parent" alt="Redis 键(key)">
<area shape="rect" coords="229, 1880, 257, 1890" href="index.html#主题240" target="_parent" alt="常用">
<area shape="rect" coords="229, 1919, 253, 1932" href="index.html#主题241" target="_parent" alt="案例">
<area shape="rect" coords="255, 1891, 284, 1901" href="index.html#主题242" target="_parent" alt=" keys *">
<area shape="rect" coords="255, 1902, 297, 1913" href="index.html#主题243" target="_parent" alt=" exists key">
<area shape="rect" coords="255, 1914, 426, 1924" href="index.html#主题244" target="_parent" alt=" move key db   ---&gt;当前库就没有了，被移除了">
<area shape="rect" coords="255, 1925, 417, 1935" href="index.html#主题245" target="_parent" alt=" expire key 秒钟：为给定的key设置过期时间">
<area shape="rect" coords="255, 1936, 477, 1947" href="index.html#主题246" target="_parent" alt=" ttl key 查看还有多少秒过期，-1表示永不过期，-2表示已过期">
<area shape="rect" coords="255, 1948, 379, 1958" href="index.html#主题247" target="_parent" alt=" type key 查看你的key是什么类型">
<area shape="rect" coords="159, 2003, 264, 2016" href="index.html#主题18" target="_parent" alt="Redis字符串(String)">
<area shape="rect" coords="266, 1961, 292, 1970" href="index.html#主题248" target="_parent" alt="常用">
<area shape="rect" coords="266, 1971, 312, 1981" href="index.html#主题249" target="_parent" alt="单值单value">
<area shape="rect" coords="266, 2012, 288, 2023" href="index.html#主题250" target="_parent" alt="案例">
<area shape="rect" coords="290, 1982, 390, 1993" href="index.html#主题251" target="_parent" alt=" set/get/del/append/strlen">
<area shape="rect" coords="290, 1994, 468, 2004" href="index.html#主题252" target="_parent" alt="Incr/decr/incrby/decrby,一定要是数字才能进行加减">
<area shape="rect" coords="290, 2005, 372, 2015" href="index.html#主题253" target="_parent" alt=" getrange/setrange">
<area shape="rect" coords="290, 2016, 466, 2027" href="index.html#主题254" target="_parent" alt=" setex(set with expire)/setnx(set if not exist)">
<area shape="rect" coords="290, 2028, 375, 2038" href="index.html#主题255" target="_parent" alt=" mset/mget/msetnx">
<area shape="rect" coords="290, 2039, 372, 2049" href="index.html#主题256" target="_parent" alt=" getset(先get再set)">
<area shape="rect" coords="159, 2122, 242, 2135" href="index.html#主题19" target="_parent" alt="Redis列表(List)">
<area shape="rect" coords="244, 2052, 273, 2063" href="index.html#主题257" target="_parent" alt="常用">
<area shape="rect" coords="244, 2064, 291, 2074" href="index.html#主题258" target="_parent" alt="单值多value">
<area shape="rect" coords="244, 2131, 268, 2143" href="index.html#主题259" target="_parent" alt="案例">
<area shape="rect" coords="270, 2075, 345, 2085" href="index.html#主题260" target="_parent" alt=" lpush/rpush/lrange">
<area shape="rect" coords="270, 2086, 320, 2097" href="index.html#主题261" target="_parent" alt=" lpop/rpop">
<area shape="rect" coords="270, 2098, 430, 2117" href="index.html#主题262" target="_parent" alt=" lindex，按照索引下标获得元素(从上到下)">
<area shape="rect" coords="270, 2118, 289, 2128" href="index.html#主题263" target="_parent" alt=" llen">
<area shape="rect" coords="270, 2129, 360, 2139" href="index.html#主题264" target="_parent" alt=" lrem key 删N个value">
<area shape="rect" coords="270, 2140, 465, 2151" href="index.html#主题265" target="_parent" alt=" ltrim key 开始index 结束index，截取指定范围的值">
<area shape="rect" coords="270, 2152, 381, 2162" href="index.html#主题266" target="_parent" alt=" rpoplpush 源列表 目的列表">
<area shape="rect" coords="270, 2163, 357, 2173" href="index.html#主题267" target="_parent" alt=" lset key index value">
<area shape="rect" coords="270, 2174, 401, 2185" href="index.html#主题268" target="_parent" alt=" linsert key  before/after 值1 值2">
<area shape="rect" coords="270, 2186, 314, 2196" href="index.html#主题269" target="_parent" alt="性能总结">
<area shape="rect" coords="159, 2259, 241, 2272" href="index.html#主题20" target="_parent" alt="Redis集合(Set)">
<area shape="rect" coords="243, 2199, 271, 2209" href="index.html#主题270" target="_parent" alt="常用">
<area shape="rect" coords="243, 2210, 289, 2221" href="index.html#主题271" target="_parent" alt="单值多value">
<area shape="rect" coords="243, 2267, 266, 2280" href="index.html#主题272" target="_parent" alt="案例">
<area shape="rect" coords="268, 2222, 384, 2232" href="index.html#主题273" target="_parent" alt=" sadd/smembers/sismember">
<area shape="rect" coords="268, 2233, 398, 2244" href="index.html#主题274" target="_parent" alt=" scard，获取集合里面的元素个数">
<area shape="rect" coords="268, 2245, 397, 2255" href="index.html#主题275" target="_parent" alt=" srem key value 删除集合中元素">
<area shape="rect" coords="268, 2256, 352, 2266" href="index.html#主题276" target="_parent" alt=" srandmember 数字">
<area shape="rect" coords="268, 2267, 334, 2278" href="index.html#主题277" target="_parent" alt=" spop 随机出栈">
<area shape="rect" coords="268, 2279, 406, 2289" href="index.html#主题278" target="_parent" alt=" smove key1 key2 在key1里某个值">
<area shape="rect" coords="268, 2301, 318, 2314" href="index.html#主题279" target="_parent" alt=" 数学集合类">
<area shape="rect" coords="320, 2290, 372, 2300" href="index.html#主题280" target="_parent" alt="差集：sdiff">
<area shape="rect" coords="320, 2301, 377, 2312" href="index.html#主题281" target="_parent" alt="交集：sinter">
<area shape="rect" coords="320, 2313, 380, 2323" href="index.html#主题282" target="_parent" alt="并集：sunion">
<area shape="rect" coords="159, 2372, 250, 2385" href="index.html#主题21" target="_parent" alt="Redis哈希(Hash)">
<area shape="rect" coords="251, 2326, 278, 2335" href="index.html#主题283" target="_parent" alt="常用">
<area shape="rect" coords="251, 2336, 365, 2346" href="index.html#主题284" target="_parent" alt="KV模式不变，但V是一个键值对">
<area shape="rect" coords="251, 2386, 274, 2397" href="index.html#主题285" target="_parent" alt="案例">
<area shape="rect" coords="275, 2347, 421, 2366" href="index.html#主题286" target="_parent" alt="  hset/hget/hmset/hmget/hgetall/hdel">
<area shape="rect" coords="275, 2367, 297, 2378" href="index.html#主题287" target="_parent" alt=" hlen">
<area shape="rect" coords="275, 2379, 414, 2389" href="index.html#主题288" target="_parent" alt=" hexists key 在key里面的某个值的key">
<area shape="rect" coords="275, 2390, 333, 2400" href="index.html#主题289" target="_parent" alt=" hkeys/hvals">
<area shape="rect" coords="275, 2401, 363, 2412" href="index.html#主题290" target="_parent" alt=" hincrby/hincrbyfloat">
<area shape="rect" coords="275, 2413, 315, 2423" href="index.html#主题291" target="_parent" alt=" hsetnx">
<area shape="rect" coords="159, 2498, 311, 2511" href="index.html#主题22" target="_parent" alt="Redis有序集合Zset(sorted set)">
<area shape="rect" coords="313, 2445, 353, 2458" href="index.html#主题292" target="_parent" alt="多说一句">
<area shape="rect" coords="354, 2426, 481, 2454" href="index.html#主题293" target="_parent" alt="在set基础上，加一个score值。 之前set是k1 v1 v2 v3， 现在zset是k1 score1 v1 score2 v2">
<area shape="rect" coords="313, 2459, 341, 2469" href="index.html#主题294" target="_parent" alt="常用">
<area shape="rect" coords="313, 2516, 337, 2528" href="index.html#主题295" target="_parent" alt="案例">
<area shape="rect" coords="339, 2470, 398, 2480" href="index.html#主题296" target="_parent" alt=" zadd/zrange">
<area shape="rect" coords="339, 2493, 501, 2505" href="index.html#主题297" target="_parent" alt=" zrangebyscore key 开始score 结束score">
<area shape="rect" coords="503, 2481, 547, 2492" href="index.html#主题298" target="_parent" alt=" withscores">
<area shape="rect" coords="503, 2493, 543, 2503" href="index.html#主题299" target="_parent" alt=" (   不包含">
<area shape="rect" coords="503, 2504, 596, 2514" href="index.html#主题300" target="_parent" alt=" limit 0-区间值  返回限制">
<area shape="rect" coords="339, 2515, 477, 2527" href="index.html#主题301" target="_parent" alt=" zrem key score对应值的某个值">
<area shape="rect" coords="339, 2528, 560, 2538" href="index.html#主题302" target="_parent" alt=" zcard/zcount key score区间/zrank/zscore key 分数对应值">
<area shape="rect" coords="339, 2539, 385, 2550" href="index.html#主题303" target="_parent" alt=" zrevrank">
<area shape="rect" coords="339, 2551, 389, 2561" href="index.html#主题304" target="_parent" alt=" zrevrange">
<area shape="rect" coords="339, 2562, 495, 2572" href="index.html#主题305" target="_parent" alt=" zrevrangebyscore  结束score 开始score">
<area shape="rect" coords="98, 2829, 158, 2850" href="index.html#主题23" target="_parent" alt="解析配置文件 redis.conf">
<area shape="rect" coords="160, 2592, 209, 2605" href="index.html#主题24" target="_parent" alt="它在哪">
<area shape="rect" coords="211, 2581, 241, 2593" href="index.html#主题306" target="_parent" alt="地址">
<area shape="rect" coords="211, 2594, 351, 2605" href="index.html#主题307" target="_parent" alt="为什么我将它拷贝出来单独执行？">
<area shape="rect" coords="160, 2606, 229, 2619" href="index.html#主题25" target="_parent" alt="Units单位">
<area shape="rect" coords="160, 2620, 252, 2633" href="index.html#主题26" target="_parent" alt="INCLUDES包含">
<area shape="rect" coords="160, 2706, 244, 2719" href="index.html#主题27" target="_parent" alt="GENERAL通用">
<area shape="rect" coords="245, 2634, 289, 2645" href="index.html#主题308" target="_parent" alt="Daemonize">
<area shape="rect" coords="245, 2646, 270, 2656" href="index.html#主题309" target="_parent" alt="Pidfile">
<area shape="rect" coords="245, 2657, 263, 2667" href="index.html#主题310" target="_parent" alt="Port">
<area shape="rect" coords="245, 2668, 301, 2679" href="index.html#主题311" target="_parent" alt="Tcp-backlog">
<area shape="rect" coords="245, 2680, 278, 2690" href="index.html#主题312" target="_parent" alt="Timeout">
<area shape="rect" coords="245, 2691, 267, 2701" href="index.html#主题313" target="_parent" alt="Bind ">
<area shape="rect" coords="245, 2702, 307, 2713" href="index.html#主题314" target="_parent" alt="Tcp-keepalive">
<area shape="rect" coords="245, 2714, 279, 2724" href="index.html#主题315" target="_parent" alt="Loglevel">
<area shape="rect" coords="245, 2725, 273, 2735" href="index.html#主题316" target="_parent" alt="Logfile">
<area shape="rect" coords="245, 2736, 313, 2747" href="index.html#主题317" target="_parent" alt="Syslog-enabled">
<area shape="rect" coords="245, 2748, 303, 2758" href="index.html#主题318" target="_parent" alt="Syslog-ident">
<area shape="rect" coords="245, 2759, 308, 2769" href="index.html#主题319" target="_parent" alt="Syslog-facility">
<area shape="rect" coords="245, 2770, 287, 2781" href="index.html#主题320" target="_parent" alt="Databases">
<area shape="rect" coords="160, 2822, 277, 2835" href="index.html#主题28" target="_parent" alt="SNAPSHOTTING快照">
<area shape="rect" coords="279, 2790, 304, 2802" href="index.html#主题321" target="_parent" alt="Save">
<area shape="rect" coords="306, 2784, 398, 2794" href="index.html#主题322" target="_parent" alt=" save 秒钟 写操作次数">
<area shape="rect" coords="306, 2795, 334, 2806" href="index.html#主题323" target="_parent" alt="禁用">
<area shape="rect" coords="279, 2807, 395, 2817" href="index.html#主题324" target="_parent" alt="Stop-writes-on-bgsave-error">
<area shape="rect" coords="279, 2818, 351, 2828" href="index.html#主题325" target="_parent" alt=" rdbcompression">
<area shape="rect" coords="279, 2829, 341, 2840" href="index.html#主题326" target="_parent" alt=" rdbchecksum">
<area shape="rect" coords="279, 2841, 325, 2851" href="index.html#主题327" target="_parent" alt=" dbfilename">
<area shape="rect" coords="279, 2852, 294, 2862" href="index.html#主题328" target="_parent" alt=" dir">
<area shape="rect" coords="160, 2863, 259, 2876" href="index.html#主题29" target="_parent" alt="REPLICATION复制">
<area shape="rect" coords="160, 2877, 241, 2890" href="index.html#主题30" target="_parent" alt="SECURITY安全">
<area shape="rect" coords="160, 2940, 232, 2953" href="index.html#主题31" target="_parent" alt="LIMITS限制">
<area shape="rect" coords="234, 2891, 284, 2902" href="index.html#主题329" target="_parent" alt="Maxclients">
<area shape="rect" coords="234, 2903, 291, 2913" href="index.html#主题330" target="_parent" alt="Maxmemory">
<area shape="rect" coords="234, 2943, 319, 2955" href="index.html#主题331" target="_parent" alt="Maxmemory-policy">
<area shape="rect" coords="321, 2914, 590, 2924" href="index.html#主题332" target="_parent" alt="Volatile-lru -&gt; remove the key with an expire set using an LRU algorithm">
<area shape="rect" coords="321, 2925, 551, 2936" href="index.html#主题333" target="_parent" alt="Allkeys-lru -&gt; remove any key according to the LRU algorithm">
<area shape="rect" coords="321, 2937, 544, 2947" href="index.html#主题334" target="_parent" alt="Volatile-random -&gt; remove a random key with an expire set">
<area shape="rect" coords="321, 2948, 508, 2958" href="index.html#主题335" target="_parent" alt="Allkeys-random -&gt; remove a random key, any key">
<area shape="rect" coords="321, 2959, 584, 2970" href="index.html#主题336" target="_parent" alt="Volatile-ttl -&gt; remove the key with the nearest expire time (minor TTL)">
<area shape="rect" coords="321, 2971, 589, 2981" href="index.html#主题337" target="_parent" alt="Noeviction -&gt; don't expire at all, just return an error on write operations">
<area shape="rect" coords="234, 2982, 324, 2992" href="index.html#主题338" target="_parent" alt="Maxmemory-samples">
<area shape="rect" coords="160, 3039, 301, 3052" href="index.html#主题32" target="_parent" alt="APPEND ONLY MODE追加">
<area shape="rect" coords="303, 2995, 351, 3006" href="index.html#主题339" target="_parent" alt=" appendonly">
<area shape="rect" coords="303, 3007, 367, 3017" href="index.html#主题340" target="_parent" alt=" appendfilename">
<area shape="rect" coords="303, 3030, 366, 3042" href="index.html#主题341" target="_parent" alt="Appendfsync">
<area shape="rect" coords="368, 3018, 664, 3029" href="index.html#主题342" target="_parent" alt="Always：同步持久化 每次发生数据变更会被立即记录到磁盘  性能较差但数据完整性比较好">
<area shape="rect" coords="368, 3030, 633, 3040" href="index.html#主题343" target="_parent" alt="Everysec：出厂默认推荐，异步操作，每秒记录   如果一秒内宕机，有数据丢失">
<area shape="rect" coords="368, 3041, 381, 3051" href="index.html#主题344" target="_parent" alt="No">
<area shape="rect" coords="303, 3052, 660, 3063" href="index.html#主题345" target="_parent" alt="No-appendfsync-on-rewrite：重写时是否可以运用Appendfsync，用默认no即可，保证数据安全性。">
<area shape="rect" coords="303, 3064, 472, 3074" href="index.html#主题346" target="_parent" alt="Auto-aof-rewrite-min-size：设置重写的基准值">
<area shape="rect" coords="303, 3075, 475, 3085" href="index.html#主题347" target="_parent" alt="Auto-aof-rewrite-percentage：设置重写的基准值">
<area shape="rect" coords="160, 3086, 292, 3098" href="index.html#主题33" target="_parent" alt="常见配置redis.conf介绍">
<area shape="rect" coords="98, 3487, 157, 3502" href="index.html#主题34" target="_parent" alt="Redis的持久化">
<area shape="rect" coords="159, 3112, 203, 3125" href="index.html#主题35" target="_parent" alt="总体介绍">
<area shape="rect" coords="205, 3107, 249, 3117" href="index.html#主题348" target="_parent" alt="官网介绍">
<area shape="rect" coords="159, 3281, 277, 3294" href="index.html#主题36" target="_parent" alt="RDB（Redis DataBase）">
<area shape="rect" coords="279, 3128, 323, 3138" href="index.html#主题349" target="_parent" alt="官网介绍">
<area shape="rect" coords="279, 3171, 318, 3184" href="index.html#主题350" target="_parent" alt="是什么：">
<area shape="rect" coords="320, 3139, 572, 3158" href="index.html#主题351" target="_parent" alt="在指定的时间间隔内将内存中的数据集快照写入磁盘， 也就是行话讲的Snapshot快照，它恢复时是将快照文件直接读到内存里">
<area shape="rect" coords="320, 3159, 638, 3204" href="index.html#主题352" target="_parent" alt="Redis会单独创建（fork）一个子进程来进行持久化，会先将数据写入到 一个临时文件中，待持久化过程都结束了，再用这个临时文件替换上次持久化好的文件。 整个过程中，主进程是不进行任何IO操作的，这就确保了极高的性能 如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那RDB方 式要比AOF方式更加的高效。RDB的缺点是最后一次持久化后的数据可能丢失。">
<area shape="rect" coords="279, 3218, 302, 3230" href="index.html#主题353" target="_parent" alt="Fork">
<area shape="rect" coords="304, 3207, 669, 3226" href="index.html#主题354" target="_parent" alt="Fork的作用是复制一个与当前进程一样的进程。新进程的所有数据（变量、环境变量、程序计数器等） 数值都和原进程一致，但是是一个全新的进程，并作为原进程的子进程">
<area shape="rect" coords="279, 3231, 382, 3242" href="index.html#主题355" target="_parent" alt="Rdb 保存的是dump.rdb文件">
<area shape="rect" coords="279, 3243, 323, 3253" href="index.html#主题356" target="_parent" alt="配置位置">
<area shape="rect" coords="279, 3286, 350, 3298" href="index.html#主题357" target="_parent" alt="如何触发RDB快照">
<area shape="rect" coords="352, 3259, 463, 3272" href="index.html#主题358" target="_parent" alt="配置文件中默认的快照配置">
<area shape="rect" coords="465, 3256, 545, 3269" href="index.html#主题359" target="_parent" alt="冷拷贝后重新使用">
<area shape="rect" coords="547, 3254, 670, 3265" href="index.html#主题360" target="_parent" alt="可以cp dump.rdb dump_new.rdb">
<area shape="rect" coords="352, 3290, 450, 3302" href="index.html#主题361" target="_parent" alt="命令save或者是bgsave">
<area shape="rect" coords="452, 3276, 617, 3286" href="index.html#主题362" target="_parent" alt="Save：save时只管保存，其它不管，全部阻塞">
<area shape="rect" coords="452, 3287, 649, 3315" href="index.html#主题363" target="_parent" alt="BGSAVE：Redis会在后台异步进行快照操作， 快照同时还可以响应客户端请求。可以通过lastsave 命令获取最后一次成功执行快照的时间">
<area shape="rect" coords="352, 3316, 591, 3326" href="index.html#主题364" target="_parent" alt="执行flushall命令，也会产生dump.rdb文件，但里面是空的，无意义">
<area shape="rect" coords="279, 3335, 318, 3347" href="index.html#主题365" target="_parent" alt="如何恢复">
<area shape="rect" coords="320, 3329, 544, 3339" href="index.html#主题366" target="_parent" alt="将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可">
<area shape="rect" coords="320, 3340, 413, 3351" href="index.html#主题367" target="_parent" alt="CONFIG GET dir获取目录">
<area shape="rect" coords="279, 3359, 302, 3372" href="index.html#主题368" target="_parent" alt="优势">
<area shape="rect" coords="304, 3354, 387, 3364" href="index.html#主题369" target="_parent" alt="适合大规模的数据恢复">
<area shape="rect" coords="304, 3365, 419, 3375" href="index.html#主题370" target="_parent" alt="对数据完整性和一致性要求不高">
<area shape="rect" coords="279, 3393, 302, 3405" href="index.html#主题371" target="_parent" alt="劣势">
<area shape="rect" coords="304, 3378, 540, 3397" href="index.html#主题372" target="_parent" alt="在一定间隔时间做一次备份，所以如果redis意外down掉的话，就 会丢失最后一次快照后的所有修改">
<area shape="rect" coords="304, 3398, 551, 3409" href="index.html#主题373" target="_parent" alt="Fork的时候，内存中的数据被克隆了一份，大致2倍的膨胀性需要考虑">
<area shape="rect" coords="279, 3414, 318, 3426" href="index.html#主题374" target="_parent" alt="如何停止">
<area shape="rect" coords="320, 3412, 545, 3422" href="index.html#主题375" target="_parent" alt="动态所有停止RDB保存规则的方法：redis-cli config set save &quot;&quot;">
<area shape="rect" coords="279, 3427, 315, 3437" href="index.html#主题376" target="_parent" alt="小总结">
<area shape="rect" coords="159, 3597, 285, 3610" href="index.html#主题37" target="_parent" alt="AOF（Append Only File）">
<area shape="rect" coords="287, 3440, 331, 3451" href="index.html#主题377" target="_parent" alt="官网介绍">
<area shape="rect" coords="287, 3470, 326, 3482" href="index.html#主题378" target="_parent" alt="是什么：">
<area shape="rect" coords="328, 3452, 631, 3478" href="index.html#主题379" target="_parent" alt="以日志的形式来记录每个写操作，将Redis执行过的所有写指令记录下来(读操作不记录)， 只许追加文件但不可以改写文件，redis启动之初会读取该文件重新构建数据，换言之，redis 重启的话就根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作">
<area shape="rect" coords="287, 3483, 405, 3493" href="index.html#主题380" target="_parent" alt="Aof保存的是appendonly.aof文件">
<area shape="rect" coords="287, 3494, 331, 3505" href="index.html#主题381" target="_parent" alt="配置位置">
<area shape="rect" coords="287, 3548, 363, 3561" href="index.html#主题382" target="_parent" alt="AOF启动/修复/恢复">
<area shape="rect" coords="365, 3520, 404, 3533" href="index.html#主题383" target="_parent" alt="正常恢复">
<area shape="rect" coords="406, 3508, 466, 3520" href="index.html#主题384" target="_parent" alt="启动：设置Yes">
<area shape="rect" coords="468, 3506, 600, 3516" href="index.html#主题385" target="_parent" alt="修改默认的appendonly no，改为yes">
<area shape="rect" coords="406, 3521, 619, 3532" href="index.html#主题386" target="_parent" alt="将有数据的aof文件复制一份保存到对应目录(config get dir)">
<area shape="rect" coords="406, 3533, 515, 3543" href="index.html#主题387" target="_parent" alt="恢复：重启redis然后重新加载">
<area shape="rect" coords="365, 3568, 404, 3581" href="index.html#主题388" target="_parent" alt="异常恢复">
<area shape="rect" coords="406, 3548, 466, 3560" href="index.html#主题389" target="_parent" alt="启动：设置Yes">
<area shape="rect" coords="468, 3546, 600, 3556" href="index.html#主题390" target="_parent" alt="修改默认的appendonly no，改为yes">
<area shape="rect" coords="406, 3561, 488, 3572" href="index.html#主题391" target="_parent" alt="备份被写坏的AOF文件">
<area shape="rect" coords="406, 3575, 447, 3587" href="index.html#主题392" target="_parent" alt="修复：">
<area shape="rect" coords="449, 3573, 559, 3583" href="index.html#主题393" target="_parent" alt="Redis-check-aof --fix进行修复">
<area shape="rect" coords="406, 3588, 515, 3599" href="index.html#主题394" target="_parent" alt="恢复：重启redis然后重新加载">
<area shape="rect" coords="287, 3640, 330, 3652" href="index.html#主题395" target="_parent" alt="Rewrite">
<area shape="rect" coords="332, 3621, 372, 3633" href="index.html#主题396" target="_parent" alt="是什么：">
<area shape="rect" coords="373, 3602, 661, 3629" href="index.html#主题397" target="_parent" alt="AOF采用文件追加方式，文件会越来越大为避免出现此种情况，新增了重写机制, 当AOF文件的大小超过所设定的阈值时，Redis就会启动AOF文件的内容压缩， 只保留可以恢复数据的最小指令集.可以使用命令bgrewriteaof">
<area shape="rect" coords="332, 3656, 372, 3668" href="index.html#主题398" target="_parent" alt="重写原理">
<area shape="rect" coords="373, 3636, 742, 3664" href="index.html#主题399" target="_parent" alt="AOF文件持续增长而过大时，会fork出一条新进程来将文件重写(也是先写临时文件最后再rename)， 遍历新进程的内存中数据，每条记录有一条的Set语句。重写aof文件的操作，并没有读取旧的aof文件， 而是将整个内存中的数据库内容用命令的方式重写了一个新的aof文件，这点和快照有点类似">
<area shape="rect" coords="332, 3673, 372, 3686" href="index.html#主题400" target="_parent" alt="触发机制">
<area shape="rect" coords="373, 3671, 742, 3681" href="index.html#主题401" target="_parent" alt="Redis会记录上次重写时的AOF大小，默认配置是当AOF文件大小是上次rewrite后大小的一倍且文件大于64M时触发">
<area shape="rect" coords="287, 3700, 310, 3712" href="index.html#主题402" target="_parent" alt="优势">
<area shape="rect" coords="312, 3689, 721, 3699" href="index.html#主题403" target="_parent" alt="每秒同步：appendfsync always   同步持久化 每次发生数据变更会被立即记录到磁盘  性能较差但数据完整性比较好">
<area shape="rect" coords="312, 3700, 636, 3710" href="index.html#主题404" target="_parent" alt="每修改同步：appendfsync everysec    异步操作，每秒记录   如果一秒内宕机，有数据丢失">
<area shape="rect" coords="312, 3711, 444, 3722" href="index.html#主题405" target="_parent" alt="不同步：appendfsync no   从不同步">
<area shape="rect" coords="287, 3730, 310, 3743" href="index.html#主题406" target="_parent" alt="劣势">
<area shape="rect" coords="312, 3725, 550, 3735" href="index.html#主题407" target="_parent" alt="相同数据集的数据而言aof文件要远大于rdb文件，恢复速度鳗鱼rdb">
<area shape="rect" coords="312, 3736, 561, 3746" href="index.html#主题408" target="_parent" alt="Aof运行效率要慢于rdb,每秒同步策略效率较好，不同步效率和rdb相同">
<area shape="rect" coords="287, 3747, 323, 3758" href="index.html#主题409" target="_parent" alt="小总结">
<area shape="rect" coords="159, 3820, 242, 3833" href="index.html#主题38" target="_parent" alt="总结(Which one)">
<area shape="rect" coords="244, 3761, 288, 3771" href="index.html#主题410" target="_parent" alt="官网建议">
<area shape="rect" coords="244, 3772, 477, 3782" href="index.html#主题411" target="_parent" alt="RDB持久化方式能够在指定的时间间隔能对你的数据进行快照存储">
<area shape="rect" coords="244, 3783, 532, 3811" href="index.html#主题412" target="_parent" alt="AOF持久化方式记录每次对服务器写的操作,当服务器重启的时候会重新执行这些 命令来恢复原始的数据,AOF命令以redis协议追加保存每次写的操作到文件末尾. Redis还能对AOF文件进行后台重写,使得AOF文件的体积不至于过大">
<area shape="rect" coords="244, 3812, 570, 3822" href="index.html#主题413" target="_parent" alt="只做缓存：如果你只希望你的数据在服务器运行的时候存在,你也可以不使用任何持久化方式.">
<area shape="rect" coords="244, 3846, 339, 3859" href="index.html#主题414" target="_parent" alt="同时开启两种持久化方式">
<area shape="rect" coords="341, 3823, 607, 3842" href="index.html#主题415" target="_parent" alt="在这种情况下,当redis重启的时候会优先载入AOF文件来恢复原始的数据, 因为在通常情况下AOF文件保存的数据集要比RDB文件保存的数据集要完整.">
<area shape="rect" coords="341, 3843, 672, 3871" href="index.html#主题416" target="_parent" alt="RDB的数据不实时，同时使用两者时服务器重启也只会找AOF文件。那要不要只使用AOF呢？ 作者建议不要，因为RDB更适合用于备份数据库(AOF在不断变化不好备份)， 快速重启，而且不会有AOF可能潜在的bug，留着作为一个万一的手段。">
<area shape="rect" coords="244, 3872, 288, 3882" href="index.html#主题417" target="_parent" alt="性能建议">
<area shape="rect" coords="98, 4012, 151, 4027" href="index.html#主题39" target="_parent" alt="Redis的事务">
<area shape="rect" coords="153, 3909, 188, 3922" href="index.html#主题40" target="_parent" alt="是什么">
<area shape="rect" coords="190, 3891, 468, 3910" href="index.html#主题418" target="_parent" alt="可以一次执行多个命令，本质是一组命令的集合。一个事务中的 所有命令都会序列化，按顺序地串行化执行执行而不会被其它命令插入，不许加塞">
<area shape="rect" coords="190, 3911, 218, 3922" href="index.html#主题419" target="_parent" alt="官网">
<area shape="rect" coords="153, 3930, 188, 3943" href="index.html#主题41" target="_parent" alt="能干嘛">
<area shape="rect" coords="190, 3925, 392, 3935" href="index.html#主题420" target="_parent" alt="一个队列中，一次性、顺序性、排他性的执行一系列命令">
<area shape="rect" coords="153, 4005, 197, 4018" href="index.html#主题42" target="_parent" alt="怎么玩">
<area shape="rect" coords="199, 3946, 243, 3957" href="index.html#主题421" target="_parent" alt="常用命令">
<area shape="rect" coords="199, 3958, 273, 3968" href="index.html#主题422" target="_parent" alt="Case1：正常执行">
<area shape="rect" coords="199, 3969, 273, 3979" href="index.html#主题423" target="_parent" alt="Case2：放弃事务">
<area shape="rect" coords="199, 3980, 273, 3991" href="index.html#主题424" target="_parent" alt="Case3：全体连坐">
<area shape="rect" coords="199, 3992, 273, 4002" href="index.html#主题425" target="_parent" alt="Case4：冤头债主">
<area shape="rect" coords="199, 4030, 274, 4042" href="index.html#主题426" target="_parent" alt="Case5：watch监控">
<area shape="rect" coords="276, 4003, 386, 4013" href="index.html#主题427" target="_parent" alt="无加塞，先监控再开启multi">
<area shape="rect" coords="276, 4017, 316, 4029" href="index.html#主题428" target="_parent" alt="有加塞">
<area shape="rect" coords="318, 4014, 522, 4025" href="index.html#主题429" target="_parent" alt="监控了key，如果key被修改了，后面一个事务的执行失效">
<area shape="rect" coords="276, 4030, 321, 4040" href="index.html#主题430" target="_parent" alt=" unwatch">
<area shape="rect" coords="276, 4041, 447, 4052" href="index.html#主题431" target="_parent" alt="一旦执行了exec之前加的监控锁都会被取消掉了">
<area shape="rect" coords="276, 4055, 299, 4067" href="index.html#主题432" target="_parent" alt="小结">
<area shape="rect" coords="301, 4053, 822, 4063" href="index.html#主题433" target="_parent" alt="Watch指令，类似乐观锁，事务提交时，如果Key的值已被别的客户端改变，比如某个list已被别的客户端push/pop过了，整个事务队列都不会被执行">
<area shape="rect" coords="153, 4085, 184, 4098" href="index.html#主题43" target="_parent" alt="3阶段">
<area shape="rect" coords="186, 4070, 291, 4080" href="index.html#主题434" target="_parent" alt="开启：以MULTI开始一个事务">
<area shape="rect" coords="186, 4081, 539, 4092" href="index.html#主题435" target="_parent" alt="入队：将多个命令入队到事务中，接到这些命令并不会立即执行，而是放到等待执行的事务队列里面">
<area shape="rect" coords="186, 4093, 288, 4103" href="index.html#主题436" target="_parent" alt="执行：由EXEC命令触发事务">
<area shape="rect" coords="153, 4125, 184, 4138" href="index.html#主题44" target="_parent" alt="3特性">
<area shape="rect" coords="186, 4106, 659, 4116" href="index.html#主题437" target="_parent" alt="单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。">
<area shape="rect" coords="186, 4117, 608, 4136" href="index.html#主题438" target="_parent" alt="没有隔离级别的概念：队列中的命令没有提交之前都不会实际的被执行，因为事务提交前任何指令都不会被实际执行， 也就不存在”事务内的查询要看到事务里的更新，在事务外查询不能看到”这个让人万分头痛的问题">
<area shape="rect" coords="186, 4137, 533, 4148" href="index.html#主题439" target="_parent" alt="不保证原子性：redis同一个事务中如果有一条命令执行失败，其后的命令仍然会被执行，没有回滚">
<area shape="rect" coords="98, 4175, 162, 4189" href="index.html#主题45" target="_parent" alt="Redis的发布订阅">
<area shape="rect" coords="164, 4166, 200, 4179" href="index.html#主题46" target="_parent" alt="是什么">
<area shape="rect" coords="202, 4157, 475, 4167" href="index.html#主题440" target="_parent" alt="进程间的一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。">
<area shape="rect" coords="202, 4168, 273, 4178" href="index.html#主题441" target="_parent" alt="订阅/发布消息图">
<area shape="rect" coords="164, 4180, 195, 4193" href="index.html#主题47" target="_parent" alt="命令">
<area shape="rect" coords="164, 4194, 195, 4207" href="index.html#主题48" target="_parent" alt="案列">
<area shape="rect" coords="98, 4471, 196, 4486" href="index.html#主题49" target="_parent" alt="Redis的复制(Master/Slave)">
<area shape="rect" coords="197, 4229, 233, 4242" href="index.html#主题50" target="_parent" alt="是什么">
<area shape="rect" coords="235, 4216, 263, 4226" href="index.html#主题442" target="_parent" alt="官网">
<area shape="rect" coords="235, 4227, 491, 4246" href="index.html#主题443" target="_parent" alt="行话：也就是我们所说的主从复制，主机数据更新后根据配置和策略， 自动同步到备机的master/slaver机制，Master以写为主，Slave以读为主">
<area shape="rect" coords="197, 4258, 233, 4271" href="index.html#主题51" target="_parent" alt="能干嘛">
<area shape="rect" coords="235, 4249, 270, 4260" href="index.html#主题444" target="_parent" alt="读写分离">
<area shape="rect" coords="235, 4261, 270, 4271" href="index.html#主题445" target="_parent" alt="容灾恢复">
<area shape="rect" coords="197, 4387, 233, 4400" href="index.html#主题52" target="_parent" alt="怎么玩">
<area shape="rect" coords="235, 4274, 306, 4285" href="index.html#主题446" target="_parent" alt="主库不配从库配">
<area shape="rect" coords="235, 4288, 380, 4300" href="index.html#主题447" target="_parent" alt="从库配置：slaveof 主库IP 主库端口">
<area shape="rect" coords="382, 4286, 636, 4296" href="index.html#主题448" target="_parent" alt="每次与master断开之后，都需要重新连接，除非你配置进redis.conf文件">
<area shape="rect" coords="235, 4332, 334, 4344" href="index.html#主题449" target="_parent" alt="修改配置文件细节操作">
<area shape="rect" coords="336, 4303, 431, 4313" href="index.html#主题450" target="_parent" alt="拷贝多个redis.conf文件">
<area shape="rect" coords="336, 4314, 418, 4325" href="index.html#主题451" target="_parent" alt="开启daemonize yes">
<area shape="rect" coords="336, 4326, 382, 4336" href="index.html#主题452" target="_parent" alt="Pid文件名字">
<area shape="rect" coords="336, 4337, 371, 4347" href="index.html#主题453" target="_parent" alt="指定端口">
<area shape="rect" coords="336, 4348, 393, 4359" href="index.html#主题454" target="_parent" alt="Log文件名字">
<area shape="rect" coords="336, 4360, 400, 4370" href="index.html#主题455" target="_parent" alt="Dump.rdb名字">
<area shape="rect" coords="235, 4434, 283, 4447" href="index.html#主题456" target="_parent" alt="常用3招">
<area shape="rect" coords="285, 4396, 324, 4408" href="index.html#主题457" target="_parent" alt="一主二仆">
<area shape="rect" coords="326, 4373, 351, 4383" href="index.html#主题458" target="_parent" alt="Init">
<area shape="rect" coords="326, 4384, 414, 4395" href="index.html#主题459" target="_parent" alt="一个Master两个Slave">
<area shape="rect" coords="326, 4407, 365, 4420" href="index.html#主题460" target="_parent" alt="日志查看">
<area shape="rect" coords="367, 4396, 411, 4406" href="index.html#主题461" target="_parent" alt="主机日志">
<area shape="rect" coords="367, 4407, 411, 4418" href="index.html#主题462" target="_parent" alt="备机日志">
<area shape="rect" coords="367, 4419, 436, 4429" href="index.html#主题463" target="_parent" alt=" info replication">
<area shape="rect" coords="285, 4461, 324, 4473" href="index.html#主题464" target="_parent" alt="薪火相传">
<area shape="rect" coords="326, 4432, 577, 4460" href="index.html#主题465" target="_parent" alt="上一个Slave可以是下一个slave的Master，Slave同样可以接收其他 slaves的连接和同步请求，那么该slave作为了链条中下一个的master, 可以有效减轻master的写压力">
<area shape="rect" coords="326, 4461, 524, 4471" href="index.html#主题466" target="_parent" alt="中途变更转向:会清除之前的数据，重新建立拷贝最新的">
<area shape="rect" coords="326, 4472, 432, 4482" href="index.html#主题467" target="_parent" alt="Slaveof 新主库IP 新主库端口">
<area shape="rect" coords="285, 4490, 324, 4503" href="index.html#主题468" target="_parent" alt="反客为主">
<area shape="rect" coords="326, 4487, 394, 4500" href="index.html#主题469" target="_parent" alt="SLAVEOF no one">
<area shape="rect" coords="396, 4485, 590, 4496" href="index.html#主题470" target="_parent" alt="使当前数据库停止与其他数据库的同步，转成主数据库">
<area shape="rect" coords="197, 4537, 242, 4550" href="index.html#主题53" target="_parent" alt="复制原理">
<area shape="rect" coords="244, 4507, 428, 4517" href="index.html#主题471" target="_parent" alt="Slave启动成功连接到master后会发送一个sync命令">
<area shape="rect" coords="244, 4518, 546, 4537" href="index.html#主题472" target="_parent" alt="Master接到命令启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令， 在后台进程执行完毕之后，master将传送整个数据文件到slave,以完成一次完全同步">
<area shape="rect" coords="244, 4538, 528, 4548" href="index.html#主题473" target="_parent" alt="全量复制：而slave服务在接收到数据库文件数据后，将其存盘并加载到内存中。">
<area shape="rect" coords="244, 4549, 515, 4560" href="index.html#主题474" target="_parent" alt="增量复制：Master继续将新的所有收集到的修改命令依次传给slave,完成同步">
<area shape="rect" coords="244, 4561, 484, 4571" href="index.html#主题475" target="_parent" alt="但是只要是重新连接master,一次完全同步（全量复制)将被自动执行">
<area shape="rect" coords="197, 4646, 286, 4659" href="index.html#主题54" target="_parent" alt="哨兵模式(sentinel)">
<area shape="rect" coords="288, 4575, 319, 4587" href="index.html#主题476" target="_parent" alt="是什么">
<area shape="rect" coords="321, 4574, 628, 4583" href="index.html#主题477" target="_parent" alt="反客为主的自动版，能够后台监控主机是否故障，如果故障了根据投票数自动将从库转换为主库">
<area shape="rect" coords="288, 4644, 365, 4657" href="index.html#主题478" target="_parent" alt="怎么玩(使用步骤：)">
<area shape="rect" coords="367, 4590, 471, 4600" href="index.html#主题479" target="_parent" alt="调整结构，6379带着80、81">
<area shape="rect" coords="367, 4601, 577, 4612" href="index.html#主题480" target="_parent" alt="/usr/common目录下新建sentinel.conf文件，名字绝不能错">
<area shape="rect" coords="367, 4619, 407, 4631" href="index.html#主题481" target="_parent" alt="填写内容">
<area shape="rect" coords="409, 4613, 661, 4623" href="index.html#主题482" target="_parent" alt=" sentinel monitor 被监控数据库名字(自己起名字) 127.0.0.1 6379 1">
<area shape="rect" coords="409, 4624, 737, 4634" href="index.html#主题483" target="_parent" alt="上面最后一个数字1，表示主机挂掉后salve投票看让谁接替成为主机，得票数多少后成为主机">
<area shape="rect" coords="367, 4640, 416, 4652" href="index.html#主题484" target="_parent" alt="启动哨兵">
<area shape="rect" coords="417, 4637, 576, 4648" href="index.html#主题485" target="_parent" alt="Redis-sentinel /usr/common/sentinel.conf ">
<area shape="rect" coords="367, 4653, 418, 4663" href="index.html#主题486" target="_parent" alt="正常主从演示">
<area shape="rect" coords="367, 4664, 445, 4675" href="index.html#主题487" target="_parent" alt="原有的master挂了">
<area shape="rect" coords="367, 4676, 411, 4686" href="index.html#主题488" target="_parent" alt="投票新选">
<area shape="rect" coords="367, 4687, 523, 4697" href="index.html#主题489" target="_parent" alt="重新主从继续开工,info replication查查看">
<area shape="rect" coords="367, 4698, 589, 4709" href="index.html#主题490" target="_parent" alt="问题：如果之前的master重启回来，会不会双master冲突？">
<area shape="rect" coords="288, 4710, 415, 4720" href="index.html#主题491" target="_parent" alt="一组sentinel能同时监控多个Master">
<area shape="rect" coords="197, 4728, 251, 4741" href="index.html#主题55" target="_parent" alt="复制的缺点">
<area shape="rect" coords="253, 4723, 297, 4733" href="index.html#主题492" target="_parent" alt="复制延时">
<area shape="rect" coords="98, 4861, 185, 4875" href="index.html#主题56" target="_parent" alt="Redis的Java客户端Jedis">
<area shape="rect" coords="186, 4771, 231, 4784" href="index.html#主题57" target="_parent" alt="安装JDK">
<area shape="rect" coords="232, 4750, 367, 4761" href="index.html#主题493" target="_parent" alt=" tar -zxvf jdk-7u67-linux-i586.tar.gz">
<area shape="rect" coords="232, 4762, 296, 4772" href="index.html#主题494" target="_parent" alt=" vi /etc/profile">
<area shape="rect" coords="232, 4773, 292, 4783" href="index.html#主题495" target="_parent" alt="重启一次Centos">
<area shape="rect" coords="232, 4784, 268, 4795" href="index.html#主题496" target="_parent" alt="编码验证">
<area shape="rect" coords="186, 4796, 240, 4809" href="index.html#主题58" target="_parent" alt="安装eclipse">
<area shape="rect" coords="186, 4819, 276, 4832" href="index.html#主题59" target="_parent" alt="Jedis所需要的jar包">
<area shape="rect" coords="278, 4810, 368, 4820" href="index.html#主题497" target="_parent" alt="Commons-pool2-2.3.jar">
<area shape="rect" coords="278, 4821, 334, 4831" href="index.html#主题498" target="_parent" alt="Jedis-2.7.0.jar">
<area shape="rect" coords="186, 4872, 254, 4885" href="index.html#主题60" target="_parent" alt="Jedis常用操作">
<area shape="rect" coords="256, 4835, 308, 4845" href="index.html#主题499" target="_parent" alt="测试连通性">
<area shape="rect" coords="256, 4852, 288, 4864" href="index.html#主题500" target="_parent" alt="5+1">
<area shape="rect" coords="290, 4846, 322, 4856" href="index.html#主题501" target="_parent" alt="一个key">
<area shape="rect" coords="290, 4857, 341, 4868" href="index.html#主题502" target="_parent" alt="五大数据类型">
<area shape="rect" coords="256, 4869, 300, 4879" href="index.html#主题503" target="_parent" alt="事务提交">
<area shape="rect" coords="256, 4892, 304, 4904" href="index.html#主题504" target="_parent" alt="主从复制">
<area shape="rect" coords="306, 4880, 421, 4890" href="index.html#主题505" target="_parent" alt="6379,6380启动，先各自先独立">
<area shape="rect" coords="306, 4891, 326, 4902" href="index.html#主题506" target="_parent" alt="主写">
<area shape="rect" coords="306, 4903, 326, 4913" href="index.html#主题507" target="_parent" alt="从读">
<area shape="rect" coords="186, 4949, 238, 4962" href="index.html#主题61" target="_parent" alt="JedisPool">
<area shape="rect" coords="240, 4916, 374, 4927" href="index.html#主题508" target="_parent" alt="获取Jedis实例需要从JedisPool中获取">
<area shape="rect" coords="240, 4928, 366, 4938" href="index.html#主题509" target="_parent" alt="用完Jedis实例需要返还给JedisPool">
<area shape="rect" coords="240, 4939, 429, 4949" href="index.html#主题510" target="_parent" alt="如果Jedis在使用过程中出错，则也需要还给JedisPool">
<area shape="rect" coords="240, 4957, 287, 4969" href="index.html#主题511" target="_parent" alt="案例见代码">
<area shape="rect" coords="289, 4950, 334, 4960" href="index.html#主题512" target="_parent" alt="JedisPoolUtil">
<area shape="rect" coords="289, 4962, 323, 4975" href="index.html#主题513" target="_parent" alt="Demo5">
<area shape="rect" coords="324, 4961, 409, 4970" href="index.html#主题514" target="_parent" alt="JedisPool.getResource();">
<area shape="rect" coords="240, 4976, 292, 4986" href="index.html#主题515" target="_parent" alt="配置总结all">
</map>

</td>
</tr>
</table>

</div>
<!--END PAGE TOOLS UTILITIES MAP CONTENT IMAGEMAP-->

</body>
</html>
